console.log("main.min.js ran");var registerForm=document.querySelector(".form--register"),loginForm=document.querySelector(".form--login"),createNoteForm=document.querySelector(".form--createnote"),modal=document.querySelector(".modal--delete"),inputs=Array.from(document.querySelectorAll("input")),textarea=document.querySelector("textarea"),logoutButton=document.querySelector(".btn--logout"),updateNoteForm=document.querySelector(".form--updateNote"),deleteNoteForm=document.querySelector(".form--deleteNote");function processRegister(e){e.preventDefault(),console.log("validating inputs");var o="";if(validateEmail(registerForm.email)||(error(registerForm.email),o+="Email address is invalid."),validatePassword(registerForm.password)||(error(registerForm.password),o+=o?"<br /> Password is invalid":"Password is invalid"),console.log("errorMessage",o),o)return displayError(o);console.log("sending request");var t={email:registerForm.email.value,password:registerForm.password.value};console.log("userData",t),fetch("/register",{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify(t)}).then(function(e){if(!e.ok)return submitError(e);window.location="/login"}).catch(submitError)}function processLogin(e){e.preventDefault(),console.log("validating inputs");var o="";if(loginForm.email.value||(error(loginForm.email),o+="Missing email!"),loginForm.password.value||(error(loginForm.password),o+=o?"<br /> Missing password!":"Missing password!"),console.log("errorMessage",o),o)return displayError(o);console.log("sending request");var t={email:loginForm.email.value,password:loginForm.password.value};console.log("userLoginData",t),fetch("/login",{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify(t)}).then(function(e){return e.ok?e.json().then(function(e){console.log("fetch POST /login worked, heres the result",e),localStorage.token=e.token,window.location="/notes?token="+e.token}):submitError(e)}).catch(submitError)}function processLogout(){console.log("processLogout ran!"),fetch("/logout",{headers:{"Content-Type":"application/json","x-access-token":localStorage.token},method:"PUT"}).then(function(e){return e.ok?(console.log("server hit for logout",e),e.text().then(function(e){console.log("fetch PUT /logout worked, heres the result",e),localStorage.token="",window.location="/"})):submitError(e)}).catch(submitError)}function processNewNote(e){e.preventDefault(),console.log("validating inputs");var o="";if(createNoteForm.name.value||(error(createNoteForm.name),o+="Missing Title"),createNoteForm.text.value||(o?(error(createNoteForm.text),o+="<br /> Missing Note"):(error(createNoteForm.text),o+="Missing Note")),o)return displayError(o);console.log("sending request");var t={name:createNoteForm.name.value,text:createNoteForm.text.value};console.log("noteData",t),fetch("/notes",{headers:{"Content-Type":"application/json","x-access-token":localStorage.token},method:"POST",body:JSON.stringify(t)}).then(function(e){if(!e.ok)return submitError(e);console.log("fetch post /notes worked, here is the res",e),window.location="/notes?token="+localStorage.token}).catch(submitError)}function processNoteUpdate(e){e.preventDefault(),console.log("processUpdate ran"),console.log(updateNoteForm.name),console.log(updateNoteForm.name.value),console.log(!updateNoteForm.name.value),console.log(updateNoteForm.text),console.log(updateNoteForm.text.value),console.log(!updateNoteForm.text.value);var o="";if(updateNoteForm.name.value||(error(updateNoteForm.name),o+="Missing Title"),updateNoteForm.text.value||(error(updateNoteForm.text),o+=o?"<br /> Missing Note":"Missing Note"),o)return displayError(o);var t={name:updateNoteForm.name.value,text:updateNoteForm.text.value};console.log("accessing url");var r=window.location.pathname,n=r.substring(r.lastIndexOf("/")+1);console.log("expected id",n),fetch("/notes/"+n,{headers:{"Content-Type":"application/json","x-access-token":localStorage.token},method:"PUT",body:JSON.stringify(t)}).then(function(e){if(console.log("back end responded"),!e.ok)return console.log("there was error"),submitError(e);console.log("success, updated note, should redirect"),window.location="/notes?token="+localStorage.token}).catch(submitError)}function processDeleteNote(e){e.preventDefault(),console.log("requested to delete note"),console.log("accessing url");var o=window.location.pathname;console.log("pathName",o);var t=o.substring(o.lastIndexOf("/")+1);console.log("expected id",t),fetch("/notes/"+t,{headers:{"x-access-token":localStorage.token},method:"DELETE"}).then(function(e){if(!e.ok)return submitError(e);console.log("success, deleted note, should redirect"),window.location="/notes?token="+localStorage.token}).catch(submitError)}function validateEmail(e){var o=e.value;return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(o)}function validatePassword(e){return""!==e.value}function error(e){e.style.border="3px solid #f00"}function clearError(e){e.style.border=""}function displayError(e){var o=document.querySelector(".error-message");o.innerHTML=e,o.style.visibility="visible"}function submitError(e,o){return 400<=e.status&&e.status<500?e.text().then(function(e){displayError(e)}):displayError(o||"There was a problem submitting your form. Please try again later.")}console.log("registerForm",registerForm),console.log("loginForm",loginForm),console.log("createNoteForm",createNoteForm),console.log("inputs",inputs),console.log("textarea",textarea),console.log("logout button",logoutButton),console.log("updateNoteForm",updateNoteForm),console.log("modal",modal),modal&&modal.addEventListener("click",function(e){e.stopPropagation(),e.target===modal&&(modal.style.display="none")}),textarea&&textarea.addEventListener("focus",function(){clearError(this)}),inputs&&inputs.forEach(function(e){e.addEventListener("focus",function(){clearError(this)})}),logoutButton&&logoutButton.addEventListener("click",processLogout),registerForm&&registerForm.addEventListener("submit",processRegister),loginForm&&loginForm.addEventListener("submit",processLogin),createNoteForm&&createNoteForm.addEventListener("submit",processNewNote),updateNoteForm&&updateNoteForm.addEventListener("submit",processNoteUpdate),deleteNoteForm&&deleteNoteForm.addEventListener("submit",processDeleteNote),console.log("end main.min.js");